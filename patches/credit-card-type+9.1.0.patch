diff --git a/node_modules/credit-card-type/dist/index.js b/node_modules/credit-card-type/dist/index.js
index 11b1277..2d9f7fd 100644
--- a/node_modules/credit-card-type/dist/index.js
+++ b/node_modules/credit-card-type/dist/index.js
@@ -1,4 +1,3 @@
-"use strict";
 var __assign = (this && this.__assign) || function () {
     __assign = Object.assign || function(t) {
         for (var s, i = 1, n = arguments.length; i < n; i++) {
@@ -10,11 +9,11 @@ var __assign = (this && this.__assign) || function () {
     };
     return __assign.apply(this, arguments);
 };
-var cardTypes = require("./lib/card-types");
-var add_matching_cards_to_results_1 = require("./lib/add-matching-cards-to-results");
-var is_valid_input_type_1 = require("./lib/is-valid-input-type");
-var find_best_match_1 = require("./lib/find-best-match");
-var clone_1 = require("./lib/clone");
+import cardTypes from "./lib/card-types.js";
+import { addMatchingCardsToResults } from "./lib/add-matching-cards-to-results.js";
+import { isValidInputType } from "./lib/is-valid-input-type.js";
+import { findBestMatch } from "./lib/find-best-match.js";
+import { clone } from "./lib/clone.js";
 var customCards = {};
 var cardNames = {
     VISA: "visa",
@@ -44,12 +43,12 @@ var ORIGINAL_TEST_ORDER = [
     cardNames.HIPER,
     cardNames.HIPERCARD,
 ];
-var testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);
+var testOrder = clone(ORIGINAL_TEST_ORDER);
 function findType(cardType) {
     return customCards[cardType] || cardTypes[cardType];
 }
 function getAllCardTypes() {
-    return testOrder.map(function (cardType) { return clone_1.clone(findType(cardType)); });
+    return testOrder.map(function (cardType) { return clone(findType(cardType)); });
 }
 function getCardPosition(name, ignoreErrorForNotExisting) {
     if (ignoreErrorForNotExisting === void 0) { ignoreErrorForNotExisting = false; }
@@ -61,7 +60,7 @@ function getCardPosition(name, ignoreErrorForNotExisting) {
 }
 function creditCardType(cardNumber) {
     var results = [];
-    if (!is_valid_input_type_1.isValidInputType(cardNumber)) {
+    if (!isValidInputType(cardNumber)) {
         return results;
     }
     if (cardNumber.length === 0) {
@@ -69,16 +68,16 @@ function creditCardType(cardNumber) {
     }
     testOrder.forEach(function (cardType) {
         var cardConfiguration = findType(cardType);
-        add_matching_cards_to_results_1.addMatchingCardsToResults(cardNumber, cardConfiguration, results);
+        addMatchingCardsToResults(cardNumber, cardConfiguration, results);
     });
-    var bestMatch = find_best_match_1.findBestMatch(results);
+    var bestMatch = findBestMatch(results);
     if (bestMatch) {
         return [bestMatch];
     }
     return results;
 }
 creditCardType.getTypeInfo = function (cardType) {
-    return clone_1.clone(findType(cardType));
+    return clone(findType(cardType));
 };
 creditCardType.removeCard = function (name) {
     var position = getCardPosition(name);
@@ -99,7 +98,7 @@ creditCardType.updateCard = function (cardType, updates) {
     if (updates.type && originalObject.type !== updates.type) {
         throw new Error("Cannot overwrite type parameter.");
     }
-    var clonedCard = clone_1.clone(originalObject);
+    var clonedCard = clone(originalObject);
     clonedCard = __assign(__assign({}, clonedCard), updates);
     customCards[clonedCard.type] = clonedCard;
 };
@@ -109,8 +108,8 @@ creditCardType.changeOrder = function (name, position) {
     testOrder.splice(position, 0, name);
 };
 creditCardType.resetModifications = function () {
-    testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);
+    testOrder = clone(ORIGINAL_TEST_ORDER);
     customCards = {};
 };
 creditCardType.types = cardNames;
-module.exports = creditCardType;
+export default creditCardType;
diff --git a/node_modules/credit-card-type/dist/lib/add-matching-cards-to-results.js b/node_modules/credit-card-type/dist/lib/add-matching-cards-to-results.js
index 550e254..14e2a47 100644
--- a/node_modules/credit-card-type/dist/lib/add-matching-cards-to-results.js
+++ b/node_modules/credit-card-type/dist/lib/add-matching-cards-to-results.js
@@ -1,16 +1,13 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.addMatchingCardsToResults = void 0;
-var clone_1 = require("./clone");
-var matches_1 = require("./matches");
-function addMatchingCardsToResults(cardNumber, cardConfiguration, results) {
+import { clone }from "./clone.js";
+import { matches } from "./matches.js";
+export function addMatchingCardsToResults(cardNumber, cardConfiguration, results) {
     var i, patternLength;
     for (i = 0; i < cardConfiguration.patterns.length; i++) {
         var pattern = cardConfiguration.patterns[i];
-        if (!matches_1.matches(cardNumber, pattern)) {
+        if (!matches(cardNumber, pattern)) {
             continue;
         }
-        var clonedCardConfiguration = clone_1.clone(cardConfiguration);
+        var clonedCardConfiguration = clone(cardConfiguration);
         if (Array.isArray(pattern)) {
             patternLength = String(pattern[0]).length;
         }
@@ -24,4 +21,3 @@ function addMatchingCardsToResults(cardNumber, cardConfiguration, results) {
         break;
     }
 }
-exports.addMatchingCardsToResults = addMatchingCardsToResults;
diff --git a/node_modules/credit-card-type/dist/lib/card-types.js b/node_modules/credit-card-type/dist/lib/card-types.js
index 0ec4edb..377bf8b 100644
--- a/node_modules/credit-card-type/dist/lib/card-types.js
+++ b/node_modules/credit-card-type/dist/lib/card-types.js
@@ -1,5 +1,4 @@
-"use strict";
-var cardTypes = {
+export default {
     visa: {
         niceType: "Visa",
         type: "visa",
@@ -194,4 +193,3 @@ var cardTypes = {
         },
     },
 };
-module.exports = cardTypes;
diff --git a/node_modules/credit-card-type/dist/lib/clone.js b/node_modules/credit-card-type/dist/lib/clone.js
index 08d0024..1575945 100644
--- a/node_modules/credit-card-type/dist/lib/clone.js
+++ b/node_modules/credit-card-type/dist/lib/clone.js
@@ -1,10 +1,6 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.clone = void 0;
-function clone(originalObject) {
+export function clone(originalObject) {
     if (!originalObject) {
         return null;
     }
     return JSON.parse(JSON.stringify(originalObject));
 }
-exports.clone = clone;
diff --git a/node_modules/credit-card-type/dist/lib/find-best-match.js b/node_modules/credit-card-type/dist/lib/find-best-match.js
index 6b1c3d6..ad33d58 100644
--- a/node_modules/credit-card-type/dist/lib/find-best-match.js
+++ b/node_modules/credit-card-type/dist/lib/find-best-match.js
@@ -1,6 +1,3 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.findBestMatch = void 0;
 function hasEnoughResultsToDetermineBestMatch(results) {
     var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) { return result.matchStrength; }).length;
     /*
@@ -11,7 +8,7 @@ function hasEnoughResultsToDetermineBestMatch(results) {
     return (numberOfResultsWithMaxStrengthProperty > 0 &&
         numberOfResultsWithMaxStrengthProperty === results.length);
 }
-function findBestMatch(results) {
+export function findBestMatch(results) {
     if (!hasEnoughResultsToDetermineBestMatch(results)) {
         return null;
     }
@@ -29,4 +26,3 @@ function findBestMatch(results) {
         return bestMatch;
     });
 }
-exports.findBestMatch = findBestMatch;
diff --git a/node_modules/credit-card-type/dist/lib/is-valid-input-type.js b/node_modules/credit-card-type/dist/lib/is-valid-input-type.js
index fab2984..b013dbf 100644
--- a/node_modules/credit-card-type/dist/lib/is-valid-input-type.js
+++ b/node_modules/credit-card-type/dist/lib/is-valid-input-type.js
@@ -1,7 +1,3 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.isValidInputType = void 0;
-function isValidInputType(cardNumber) {
+export function isValidInputType(cardNumber) {
     return typeof cardNumber === "string" || cardNumber instanceof String;
 }
-exports.isValidInputType = isValidInputType;
diff --git a/node_modules/credit-card-type/dist/lib/matches.js b/node_modules/credit-card-type/dist/lib/matches.js
index 4ab32c3..2788a08 100644
--- a/node_modules/credit-card-type/dist/lib/matches.js
+++ b/node_modules/credit-card-type/dist/lib/matches.js
@@ -1,9 +1,3 @@
-"use strict";
-/*
- * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42
- * */
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.matches = void 0;
 function matchesRange(cardNumber, min, max) {
     var maxLengthToCheck = String(min).length;
     var substr = cardNumber.substr(0, maxLengthToCheck);
@@ -18,10 +12,12 @@ function matchesPattern(cardNumber, pattern) {
     return (pattern.substring(0, cardNumber.length) ===
         cardNumber.substring(0, pattern.length));
 }
-function matches(cardNumber, pattern) {
+/**
+ * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42
+ */
+export function matches(cardNumber, pattern) {
     if (Array.isArray(pattern)) {
         return matchesRange(cardNumber, pattern[0], pattern[1]);
     }
     return matchesPattern(cardNumber, pattern);
 }
-exports.matches = matches;
